; Listing generated by Microsoft (R) Optimizing Compiler Version 19.24.28314.0 

	TITLE	E:\WHCR\第二阶段\挑战任务\编译测试VS生成的汇编文件和测试样本\ConsoleApplication2.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?PADDING@@3PAEA					; PADDING
msvcjmc	SEGMENT
__367CC694_corecrt_memcpy_s@h DB 01H
__35D7DDB3_corecrt_memory@h DB 01H
__DC9673E3_corecrt_wstring@h DB 01H
__A29A7DFB_string@h DB 01H
__24E9E95F_stdlib@h DB 01H
__F66CEB67_corecrt_stdio_config@h DB 01H
__101834BA_corecrt_wstdio@h DB 01H
__AD6A91B7_stdio@h DB 01H
__CEBDA0B5_ConsoleApplication2@cpp DB 01H
msvcjmc	ENDS
_DATA	SEGMENT
?PADDING@@3PAEA DB 080H					; PADDING
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
_DATA	ENDS
PUBLIC	___local_stdio_printf_options
PUBLIC	__vfprintf_l
PUBLIC	_printf
PUBLIC	?MD5Init@@YAXPAUMD5_CTX@@@Z			; MD5Init
PUBLIC	?MD5Update@@YAXPAUMD5_CTX@@PAEI@Z		; MD5Update
PUBLIC	?MD5Final@@YAXPAUMD5_CTX@@QAE@Z			; MD5Final
PUBLIC	?MD5Transform@@YAXQAIQAE@Z			; MD5Transform
PUBLIC	?MD5Encode@@YAXPAEPAII@Z			; MD5Encode
PUBLIC	?MD5Decode@@YAXPAIPAEI@Z			; MD5Decode
PUBLIC	_main
PUBLIC	__JustMyCode_Default
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	??_C@_05JEBDMKHG@admin@				; `string'
PUBLIC	??_C@_0BC@IFEMJPAH@?$LM?S?C?$NM?G?$LA?3?$CFs?6?$LM?S?C?$NM?$LK?s?3@ ; `string'
PUBLIC	??_C@_04NOJCDH@?$CF02x@				; `string'
EXTRN	_memcpy:PROC
EXTRN	_strlen:PROC
EXTRN	__imp____acrt_iob_func:PROC
EXTRN	__imp__getchar:PROC
EXTRN	__imp____stdio_common_vfprintf:PROC
EXTRN	@__CheckForDebuggerJustMyCode@4:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___security_cookie:DWORD
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
;	COMDAT ??_C@_04NOJCDH@?$CF02x@
CONST	SEGMENT
??_C@_04NOJCDH@?$CF02x@ DB '%02x', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@IFEMJPAH@?$LM?S?C?$NM?G?$LA?3?$CFs?6?$LM?S?C?$NM?$LK?s?3@
CONST	SEGMENT
??_C@_0BC@IFEMJPAH@?$LM?S?C?$NM?G?$LA?3?$CFs?6?$LM?S?C?$NM?$LK?s?3@ DB 0bcH
	DB	0d3H, 0c3H, 0dcH, 0c7H, 0b0H, ':%s', 0aH, 0bcH, 0d3H, 0c3H, 0dcH
	DB	0baH, 0f3H, ':', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_05JEBDMKHG@admin@
CONST	SEGMENT
??_C@_05JEBDMKHG@admin@ DB 'admin', 00H			; `string'
CONST	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
	push	ebp
	mov	ebp, esp
	pop	ebp
	ret	0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT _main
_TEXT	SEGMENT
_md5$ = -120						; size = 88
_decrypt$ = -32						; size = 16
_encrypt$ = -16						; size = 6
_i$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_main	PROC						; COMDAT
; File E:\WHCR\第二阶段\挑战任务\编译测试VS生成的汇编文件和测试样本\ConsoleApplication2.cpp
; Line 216
	push	ebp
	mov	ebp, esp
	sub	esp, 184				; 000000b8H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET __CEBDA0B5_ConsoleApplication2@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 218
	mov	eax, DWORD PTR ??_C@_05JEBDMKHG@admin@
	mov	DWORD PTR _encrypt$[ebp], eax
	mov	cx, WORD PTR ??_C@_05JEBDMKHG@admin@+4
	mov	WORD PTR _encrypt$[ebp+4], cx
; Line 221
	lea	eax, DWORD PTR _md5$[ebp]
	push	eax
	call	?MD5Init@@YAXPAUMD5_CTX@@@Z		; MD5Init
	add	esp, 4
; Line 222
	lea	eax, DWORD PTR _encrypt$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR _encrypt$[ebp]
	push	ecx
	lea	edx, DWORD PTR _md5$[ebp]
	push	edx
	call	?MD5Update@@YAXPAUMD5_CTX@@PAEI@Z	; MD5Update
	add	esp, 12					; 0000000cH
; Line 223
	lea	eax, DWORD PTR _decrypt$[ebp]
	push	eax
	lea	ecx, DWORD PTR _md5$[ebp]
	push	ecx
	call	?MD5Final@@YAXPAUMD5_CTX@@QAE@Z		; MD5Final
	add	esp, 8
; Line 224
	lea	eax, DWORD PTR _encrypt$[ebp]
	push	eax
	push	OFFSET ??_C@_0BC@IFEMJPAH@?$LM?S?C?$NM?G?$LA?3?$CFs?6?$LM?S?C?$NM?$LK?s?3@
	call	_printf
	add	esp, 8
; Line 225
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN4@main
$LN2@main:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN4@main:
	cmp	DWORD PTR _i$[ebp], 16			; 00000010H
	jge	SHORT $LN3@main
; Line 227
	mov	eax, DWORD PTR _i$[ebp]
	movzx	ecx, BYTE PTR _decrypt$[ebp+eax]
	push	ecx
	push	OFFSET ??_C@_04NOJCDH@?$CF02x@
	call	_printf
	add	esp, 8
; Line 228
	jmp	SHORT $LN2@main
$LN3@main:
; Line 230
	call	DWORD PTR __imp__getchar
; Line 231
	xor	eax, eax
; Line 232
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_main	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ?MD5Decode@@YAXPAIPAEI@Z
_TEXT	SEGMENT
_j$ = -8						; size = 4
_i$ = -4						; size = 4
_output$ = 8						; size = 4
_input$ = 12						; size = 4
_len$ = 16						; size = 4
?MD5Decode@@YAXPAIPAEI@Z PROC				; MD5Decode, COMDAT
; File E:\WHCR\第二阶段\挑战任务\编译测试VS生成的汇编文件和测试样本\ConsoleApplication2.cpp
; Line 119
	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET __CEBDA0B5_ConsoleApplication2@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 120
	mov	DWORD PTR _i$[ebp], 0
	mov	DWORD PTR _j$[ebp], 0
$LN2@MD5Decode:
; Line 121
	mov	eax, DWORD PTR _j$[ebp]
	cmp	eax, DWORD PTR _len$[ebp]
	jae	SHORT $LN1@MD5Decode
; Line 123
	mov	eax, DWORD PTR _input$[ebp]
	add	eax, DWORD PTR _j$[ebp]
	movzx	ecx, BYTE PTR [eax]
	mov	edx, DWORD PTR _input$[ebp]
	add	edx, DWORD PTR _j$[ebp]
	movzx	eax, BYTE PTR [edx+1]
	shl	eax, 8
	or	ecx, eax
	mov	edx, DWORD PTR _input$[ebp]
	add	edx, DWORD PTR _j$[ebp]
	movzx	eax, BYTE PTR [edx+2]
	shl	eax, 16					; 00000010H
	or	ecx, eax
	mov	edx, DWORD PTR _input$[ebp]
	add	edx, DWORD PTR _j$[ebp]
	movzx	eax, BYTE PTR [edx+3]
	shl	eax, 24					; 00000018H
	or	ecx, eax
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _output$[ebp]
	mov	DWORD PTR [eax+edx*4], ecx
; Line 127
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
; Line 128
	mov	eax, DWORD PTR _j$[ebp]
	add	eax, 4
	mov	DWORD PTR _j$[ebp], eax
; Line 129
	jmp	SHORT $LN2@MD5Decode
$LN1@MD5Decode:
; Line 130
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?MD5Decode@@YAXPAIPAEI@Z ENDP				; MD5Decode
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ?MD5Encode@@YAXPAEPAII@Z
_TEXT	SEGMENT
_j$ = -8						; size = 4
_i$ = -4						; size = 4
_output$ = 8						; size = 4
_input$ = 12						; size = 4
_len$ = 16						; size = 4
?MD5Encode@@YAXPAEPAII@Z PROC				; MD5Encode, COMDAT
; File E:\WHCR\第二阶段\挑战任务\编译测试VS生成的汇编文件和测试样本\ConsoleApplication2.cpp
; Line 106
	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET __CEBDA0B5_ConsoleApplication2@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 107
	mov	DWORD PTR _i$[ebp], 0
	mov	DWORD PTR _j$[ebp], 0
$LN2@MD5Encode:
; Line 108
	mov	eax, DWORD PTR _j$[ebp]
	cmp	eax, DWORD PTR _len$[ebp]
	jae	SHORT $LN1@MD5Encode
; Line 110
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _input$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	and	edx, 255				; 000000ffH
	mov	eax, DWORD PTR _output$[ebp]
	add	eax, DWORD PTR _j$[ebp]
	mov	BYTE PTR [eax], dl
; Line 111
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _input$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	shr	edx, 8
	and	edx, 255				; 000000ffH
	mov	eax, DWORD PTR _output$[ebp]
	add	eax, DWORD PTR _j$[ebp]
	mov	BYTE PTR [eax+1], dl
; Line 112
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _input$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	shr	edx, 16					; 00000010H
	and	edx, 255				; 000000ffH
	mov	eax, DWORD PTR _output$[ebp]
	add	eax, DWORD PTR _j$[ebp]
	mov	BYTE PTR [eax+2], dl
; Line 113
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _input$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	shr	edx, 24					; 00000018H
	and	edx, 255				; 000000ffH
	mov	eax, DWORD PTR _output$[ebp]
	add	eax, DWORD PTR _j$[ebp]
	mov	BYTE PTR [eax+3], dl
; Line 114
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
; Line 115
	mov	eax, DWORD PTR _j$[ebp]
	add	eax, 4
	mov	DWORD PTR _j$[ebp], eax
; Line 116
	jmp	$LN2@MD5Encode
$LN1@MD5Encode:
; Line 117
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?MD5Encode@@YAXPAEPAII@Z ENDP				; MD5Encode
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ?MD5Transform@@YAXQAIQAE@Z
_TEXT	SEGMENT
_x$ = -276						; size = 256
_d$ = -20						; size = 4
_c$ = -16						; size = 4
_b$ = -12						; size = 4
_a$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_state$ = 8						; size = 4
_block$ = 12						; size = 4
?MD5Transform@@YAXQAIQAE@Z PROC				; MD5Transform, COMDAT
; File E:\WHCR\第二阶段\挑战任务\编译测试VS生成的汇编文件和测试样本\ConsoleApplication2.cpp
; Line 132
	push	ebp
	mov	ebp, esp
	sub	esp, 340				; 00000154H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET __CEBDA0B5_ConsoleApplication2@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 133
	mov	eax, 4
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _state$[ebp]
	mov	eax, DWORD PTR [edx+ecx]
	mov	DWORD PTR _a$[ebp], eax
; Line 134
	mov	eax, 4
	shl	eax, 0
	mov	ecx, DWORD PTR _state$[ebp]
	mov	edx, DWORD PTR [ecx+eax]
	mov	DWORD PTR _b$[ebp], edx
; Line 135
	mov	eax, 4
	shl	eax, 1
	mov	ecx, DWORD PTR _state$[ebp]
	mov	edx, DWORD PTR [ecx+eax]
	mov	DWORD PTR _c$[ebp], edx
; Line 136
	mov	eax, 4
	imul	ecx, eax, 3
	mov	edx, DWORD PTR _state$[ebp]
	mov	eax, DWORD PTR [edx+ecx]
	mov	DWORD PTR _d$[ebp], eax
; Line 138
	push	64					; 00000040H
	mov	eax, DWORD PTR _block$[ebp]
	push	eax
	lea	ecx, DWORD PTR _x$[ebp]
	push	ecx
	call	?MD5Decode@@YAXPAIPAEI@Z		; MD5Decode
	add	esp, 12					; 0000000cH
; Line 139
	mov	eax, DWORD PTR _b$[ebp]
	and	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR _b$[ebp]
	not	ecx
	and	ecx, DWORD PTR _d$[ebp]
	or	eax, ecx
	mov	edx, 4
	imul	ecx, edx, 0
	add	eax, DWORD PTR _x$[ebp+ecx]
	mov	edx, DWORD PTR _a$[ebp]
	lea	eax, DWORD PTR [edx+eax-680876936]
	mov	DWORD PTR _a$[ebp], eax
	mov	eax, DWORD PTR _a$[ebp]
	shl	eax, 7
	mov	ecx, DWORD PTR _a$[ebp]
	shr	ecx, 25					; 00000019H
	or	eax, ecx
	mov	DWORD PTR _a$[ebp], eax
	mov	eax, DWORD PTR _a$[ebp]
	add	eax, DWORD PTR _b$[ebp]
	mov	DWORD PTR _a$[ebp], eax
; Line 140
	mov	eax, DWORD PTR _a$[ebp]
	and	eax, DWORD PTR _b$[ebp]
	mov	ecx, DWORD PTR _a$[ebp]
	not	ecx
	and	ecx, DWORD PTR _c$[ebp]
	or	eax, ecx
	mov	edx, 4
	shl	edx, 0
	add	eax, DWORD PTR _x$[ebp+edx]
	mov	ecx, DWORD PTR _d$[ebp]
	lea	edx, DWORD PTR [ecx+eax-389564586]
	mov	DWORD PTR _d$[ebp], edx
	mov	eax, DWORD PTR _d$[ebp]
	shl	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _d$[ebp]
	shr	ecx, 20					; 00000014H
	or	eax, ecx
	mov	DWORD PTR _d$[ebp], eax
	mov	eax, DWORD PTR _d$[ebp]
	add	eax, DWORD PTR _a$[ebp]
	mov	DWORD PTR _d$[ebp], eax
; Line 141
	mov	eax, DWORD PTR _d$[ebp]
	and	eax, DWORD PTR _a$[ebp]
	mov	ecx, DWORD PTR _d$[ebp]
	not	ecx
	and	ecx, DWORD PTR _b$[ebp]
	or	eax, ecx
	mov	edx, 4
	shl	edx, 1
	add	eax, DWORD PTR _x$[ebp+edx]
	mov	ecx, DWORD PTR _c$[ebp]
	lea	edx, DWORD PTR [ecx+eax+606105819]
	mov	DWORD PTR _c$[ebp], edx
	mov	eax, DWORD PTR _c$[ebp]
	shl	eax, 17					; 00000011H
	mov	ecx, DWORD PTR _c$[ebp]
	shr	ecx, 15					; 0000000fH
	or	eax, ecx
	mov	DWORD PTR _c$[ebp], eax
	mov	eax, DWORD PTR _c$[ebp]
	add	eax, DWORD PTR _d$[ebp]
	mov	DWORD PTR _c$[ebp], eax
; Line 142
	mov	eax, DWORD PTR _c$[ebp]
	and	eax, DWORD PTR _d$[ebp]
	mov	ecx, DWORD PTR _c$[ebp]
	not	ecx
	and	ecx, DWORD PTR _a$[ebp]
	or	eax, ecx
	mov	edx, 4
	imul	ecx, edx, 3
	add	eax, DWORD PTR _x$[ebp+ecx]
	mov	edx, DWORD PTR _b$[ebp]
	lea	eax, DWORD PTR [edx+eax-1044525330]
	mov	DWORD PTR _b$[ebp], eax
	mov	eax, DWORD PTR _b$[ebp]
	shl	eax, 22					; 00000016H
	mov	ecx, DWORD PTR _b$[ebp]
	shr	ecx, 10					; 0000000aH
	or	eax, ecx
	mov	DWORD PTR _b$[ebp], eax
	mov	eax, DWORD PTR _b$[ebp]
	add	eax, DWORD PTR _c$[ebp]
	mov	DWORD PTR _b$[ebp], eax
; Line 143
	mov	eax, DWORD PTR _b$[ebp]
	and	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR _b$[ebp]
	not	ecx
	and	ecx, DWORD PTR _d$[ebp]
	or	eax, ecx
	mov	edx, 4
	shl	edx, 2
	add	eax, DWORD PTR _x$[ebp+edx]
	mov	ecx, DWORD PTR _a$[ebp]
	lea	edx, DWORD PTR [ecx+eax-176418897]
	mov	DWORD PTR _a$[ebp], edx
	mov	eax, DWORD PTR _a$[ebp]
	shl	eax, 7
	mov	ecx, DWORD PTR _a$[ebp]
	shr	ecx, 25					; 00000019H
	or	eax, ecx
	mov	DWORD PTR _a$[ebp], eax
	mov	eax, DWORD PTR _a$[ebp]
	add	eax, DWORD PTR _b$[ebp]
	mov	DWORD PTR _a$[ebp], eax
; Line 144
	mov	eax, DWORD PTR _a$[ebp]
	and	eax, DWORD PTR _b$[ebp]
	mov	ecx, DWORD PTR _a$[ebp]
	not	ecx
	and	ecx, DWORD PTR _c$[ebp]
	or	eax, ecx
	mov	edx, 4
	imul	ecx, edx, 5
	add	eax, DWORD PTR _x$[ebp+ecx]
	mov	edx, DWORD PTR _d$[ebp]
	lea	eax, DWORD PTR [edx+eax+1200080426]
	mov	DWORD PTR _d$[ebp], eax
	mov	eax, DWORD PTR _d$[ebp]
	shl	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _d$[ebp]
	shr	ecx, 20					; 00000014H
	or	eax, ecx
	mov	DWORD PTR _d$[ebp], eax
	mov	eax, DWORD PTR _d$[ebp]
	add	eax, DWORD PTR _a$[ebp]
	mov	DWORD PTR _d$[ebp], eax
; Line 145
	mov	eax, DWORD PTR _d$[ebp]
	and	eax, DWORD PTR _a$[ebp]
	mov	ecx, DWORD PTR _d$[ebp]
	not	ecx
	and	ecx, DWORD PTR _b$[ebp]
	or	eax, ecx
	mov	edx, 4
	imul	ecx, edx, 6
	add	eax, DWORD PTR _x$[ebp+ecx]
	mov	edx, DWORD PTR _c$[ebp]
	lea	eax, DWORD PTR [edx+eax-1473231341]
	mov	DWORD PTR _c$[ebp], eax
	mov	eax, DWORD PTR _c$[ebp]
	shl	eax, 17					; 00000011H
	mov	ecx, DWORD PTR _c$[ebp]
	shr	ecx, 15					; 0000000fH
	or	eax, ecx
	mov	DWORD PTR _c$[ebp], eax
	mov	eax, DWORD PTR _c$[ebp]
	add	eax, DWORD PTR _d$[ebp]
	mov	DWORD PTR _c$[ebp], eax
; Line 146
	mov	eax, DWORD PTR _c$[ebp]
	and	eax, DWORD PTR _d$[ebp]
	mov	ecx, DWORD PTR _c$[ebp]
	not	ecx
	and	ecx, DWORD PTR _a$[ebp]
	or	eax, ecx
	mov	edx, 4
	imul	ecx, edx, 7
	add	eax, DWORD PTR _x$[ebp+ecx]
	mov	edx, DWORD PTR _b$[ebp]
	lea	eax, DWORD PTR [edx+eax-45705983]
	mov	DWORD PTR _b$[ebp], eax
	mov	eax, DWORD PTR _b$[ebp]
	shl	eax, 22					; 00000016H
	mov	ecx, DWORD PTR _b$[ebp]
	shr	ecx, 10					; 0000000aH
	or	eax, ecx
	mov	DWORD PTR _b$[ebp], eax
	mov	eax, DWORD PTR _b$[ebp]
	add	eax, DWORD PTR _c$[ebp]
	mov	DWORD PTR _b$[ebp], eax
; Line 147
	mov	eax, DWORD PTR _b$[ebp]
	and	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR _b$[ebp]
	not	ecx
	and	ecx, DWORD PTR _d$[ebp]
	or	eax, ecx
	mov	edx, 4
	shl	edx, 3
	add	eax, DWORD PTR _x$[ebp+edx]
	mov	ecx, DWORD PTR _a$[ebp]
	lea	edx, DWORD PTR [ecx+eax+1770035416]
	mov	DWORD PTR _a$[ebp], edx
	mov	eax, DWORD PTR _a$[ebp]
	shl	eax, 7
	mov	ecx, DWORD PTR _a$[ebp]
	shr	ecx, 25					; 00000019H
	or	eax, ecx
	mov	DWORD PTR _a$[ebp], eax
	mov	eax, DWORD PTR _a$[ebp]
	add	eax, DWORD PTR _b$[ebp]
	mov	DWORD PTR _a$[ebp], eax
; Line 148
	mov	eax, DWORD PTR _a$[ebp]
	and	eax, DWORD PTR _b$[ebp]
	mov	ecx, DWORD PTR _a$[ebp]
	not	ecx
	and	ecx, DWORD PTR _c$[ebp]
	or	eax, ecx
	mov	edx, 4
	imul	ecx, edx, 9
	add	eax, DWORD PTR _x$[ebp+ecx]
	mov	edx, DWORD PTR _d$[ebp]
	lea	eax, DWORD PTR [edx+eax-1958414417]
	mov	DWORD PTR _d$[ebp], eax
	mov	eax, DWORD PTR _d$[ebp]
	shl	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _d$[ebp]
	shr	ecx, 20					; 00000014H
	or	eax, ecx
	mov	DWORD PTR _d$[ebp], eax
	mov	eax, DWORD PTR _d$[ebp]
	add	eax, DWORD PTR _a$[ebp]
	mov	DWORD PTR _d$[ebp], eax
; Line 149
	mov	eax, DWORD PTR _d$[ebp]
	and	eax, DWORD PTR _a$[ebp]
	mov	ecx, DWORD PTR _d$[ebp]
	not	ecx
	and	ecx, DWORD PTR _b$[ebp]
	or	eax, ecx
	mov	edx, 4
	imul	ecx, edx, 10
	add	eax, DWORD PTR _x$[ebp+ecx]
	mov	edx, DWORD PTR _c$[ebp]
	lea	eax, DWORD PTR [edx+eax-42063]
	mov	DWORD PTR _c$[ebp], eax
	mov	eax, DWORD PTR _c$[ebp]
	shl	eax, 17					; 00000011H
	mov	ecx, DWORD PTR _c$[ebp]
	shr	ecx, 15					; 0000000fH
	or	eax, ecx
	mov	DWORD PTR _c$[ebp], eax
	mov	eax, DWORD PTR _c$[ebp]
	add	eax, DWORD PTR _d$[ebp]
	mov	DWORD PTR _c$[ebp], eax
; Line 150
	mov	eax, DWORD PTR _c$[ebp]
	and	eax, DWORD PTR _d$[ebp]
	mov	ecx, DWORD PTR _c$[ebp]
	not	ecx
	and	ecx, DWORD PTR _a$[ebp]
	or	eax, ecx
	mov	edx, 4
	imul	ecx, edx, 11
	add	eax, DWORD PTR _x$[ebp+ecx]
	mov	edx, DWORD PTR _b$[ebp]
	lea	eax, DWORD PTR [edx+eax-1990404162]
	mov	DWORD PTR _b$[ebp], eax
	mov	eax, DWORD PTR _b$[ebp]
	shl	eax, 22					; 00000016H
	mov	ecx, DWORD PTR _b$[ebp]
	shr	ecx, 10					; 0000000aH
	or	eax, ecx
	mov	DWORD PTR _b$[ebp], eax
	mov	eax, DWORD PTR _b$[ebp]
	add	eax, DWORD PTR _c$[ebp]
	mov	DWORD PTR _b$[ebp], eax
; Line 151
	mov	eax, DWORD PTR _b$[ebp]
	and	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR _b$[ebp]
	not	ecx
	and	ecx, DWORD PTR _d$[ebp]
	or	eax, ecx
	mov	edx, 4
	imul	ecx, edx, 12
	add	eax, DWORD PTR _x$[ebp+ecx]
	mov	edx, DWORD PTR _a$[ebp]
	lea	eax, DWORD PTR [edx+eax+1804603682]
	mov	DWORD PTR _a$[ebp], eax
	mov	eax, DWORD PTR _a$[ebp]
	shl	eax, 7
	mov	ecx, DWORD PTR _a$[ebp]
	shr	ecx, 25					; 00000019H
	or	eax, ecx
	mov	DWORD PTR _a$[ebp], eax
	mov	eax, DWORD PTR _a$[ebp]
	add	eax, DWORD PTR _b$[ebp]
	mov	DWORD PTR _a$[ebp], eax
; Line 152
	mov	eax, DWORD PTR _a$[ebp]
	and	eax, DWORD PTR _b$[ebp]
	mov	ecx, DWORD PTR _a$[ebp]
	not	ecx
	and	ecx, DWORD PTR _c$[ebp]
	or	eax, ecx
	mov	edx, 4
	imul	ecx, edx, 13
	add	eax, DWORD PTR _x$[ebp+ecx]
	mov	edx, DWORD PTR _d$[ebp]
	lea	eax, DWORD PTR [edx+eax-40341101]
	mov	DWORD PTR _d$[ebp], eax
	mov	eax, DWORD PTR _d$[ebp]
	shl	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _d$[ebp]
	shr	ecx, 20					; 00000014H
	or	eax, ecx
	mov	DWORD PTR _d$[ebp], eax
	mov	eax, DWORD PTR _d$[ebp]
	add	eax, DWORD PTR _a$[ebp]
	mov	DWORD PTR _d$[ebp], eax
; Line 153
	mov	eax, DWORD PTR _d$[ebp]
	and	eax, DWORD PTR _a$[ebp]
	mov	ecx, DWORD PTR _d$[ebp]
	not	ecx
	and	ecx, DWORD PTR _b$[ebp]
	or	eax, ecx
	mov	edx, 4
	imul	ecx, edx, 14
	add	eax, DWORD PTR _x$[ebp+ecx]
	mov	edx, DWORD PTR _c$[ebp]
	lea	eax, DWORD PTR [edx+eax-1502002290]
	mov	DWORD PTR _c$[ebp], eax
	mov	eax, DWORD PTR _c$[ebp]
	shl	eax, 17					; 00000011H
	mov	ecx, DWORD PTR _c$[ebp]
	shr	ecx, 15					; 0000000fH
	or	eax, ecx
	mov	DWORD PTR _c$[ebp], eax
	mov	eax, DWORD PTR _c$[ebp]
	add	eax, DWORD PTR _d$[ebp]
	mov	DWORD PTR _c$[ebp], eax
; Line 154
	mov	eax, DWORD PTR _c$[ebp]
	and	eax, DWORD PTR _d$[ebp]
	mov	ecx, DWORD PTR _c$[ebp]
	not	ecx
	and	ecx, DWORD PTR _a$[ebp]
	or	eax, ecx
	mov	edx, 4
	imul	ecx, edx, 15
	add	eax, DWORD PTR _x$[ebp+ecx]
	mov	edx, DWORD PTR _b$[ebp]
	lea	eax, DWORD PTR [edx+eax+1236535329]
	mov	DWORD PTR _b$[ebp], eax
	mov	eax, DWORD PTR _b$[ebp]
	shl	eax, 22					; 00000016H
	mov	ecx, DWORD PTR _b$[ebp]
	shr	ecx, 10					; 0000000aH
	or	eax, ecx
	mov	DWORD PTR _b$[ebp], eax
	mov	eax, DWORD PTR _b$[ebp]
	add	eax, DWORD PTR _c$[ebp]
	mov	DWORD PTR _b$[ebp], eax
; Line 157
	mov	eax, DWORD PTR _b$[ebp]
	and	eax, DWORD PTR _d$[ebp]
	mov	ecx, DWORD PTR _d$[ebp]
	not	ecx
	and	ecx, DWORD PTR _c$[ebp]
	or	eax, ecx
	mov	edx, 4
	shl	edx, 0
	add	eax, DWORD PTR _x$[ebp+edx]
	mov	ecx, DWORD PTR _a$[ebp]
	lea	edx, DWORD PTR [ecx+eax-165796510]
	mov	DWORD PTR _a$[ebp], edx
	mov	eax, DWORD PTR _a$[ebp]
	shl	eax, 5
	mov	ecx, DWORD PTR _a$[ebp]
	shr	ecx, 27					; 0000001bH
	or	eax, ecx
	mov	DWORD PTR _a$[ebp], eax
	mov	eax, DWORD PTR _a$[ebp]
	add	eax, DWORD PTR _b$[ebp]
	mov	DWORD PTR _a$[ebp], eax
; Line 158
	mov	eax, DWORD PTR _a$[ebp]
	and	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR _c$[ebp]
	not	ecx
	and	ecx, DWORD PTR _b$[ebp]
	or	eax, ecx
	mov	edx, 4
	imul	ecx, edx, 6
	add	eax, DWORD PTR _x$[ebp+ecx]
	mov	edx, DWORD PTR _d$[ebp]
	lea	eax, DWORD PTR [edx+eax-1069501632]
	mov	DWORD PTR _d$[ebp], eax
	mov	eax, DWORD PTR _d$[ebp]
	shl	eax, 9
	mov	ecx, DWORD PTR _d$[ebp]
	shr	ecx, 23					; 00000017H
	or	eax, ecx
	mov	DWORD PTR _d$[ebp], eax
	mov	eax, DWORD PTR _d$[ebp]
	add	eax, DWORD PTR _a$[ebp]
	mov	DWORD PTR _d$[ebp], eax
; Line 159
	mov	eax, DWORD PTR _d$[ebp]
	and	eax, DWORD PTR _b$[ebp]
	mov	ecx, DWORD PTR _b$[ebp]
	not	ecx
	and	ecx, DWORD PTR _a$[ebp]
	or	eax, ecx
	mov	edx, 4
	imul	ecx, edx, 11
	add	eax, DWORD PTR _x$[ebp+ecx]
	mov	edx, DWORD PTR _c$[ebp]
	lea	eax, DWORD PTR [edx+eax+643717713]
	mov	DWORD PTR _c$[ebp], eax
	mov	eax, DWORD PTR _c$[ebp]
	shl	eax, 14					; 0000000eH
	mov	ecx, DWORD PTR _c$[ebp]
	shr	ecx, 18					; 00000012H
	or	eax, ecx
	mov	DWORD PTR _c$[ebp], eax
	mov	eax, DWORD PTR _c$[ebp]
	add	eax, DWORD PTR _d$[ebp]
	mov	DWORD PTR _c$[ebp], eax
; Line 160
	mov	eax, DWORD PTR _c$[ebp]
	and	eax, DWORD PTR _a$[ebp]
	mov	ecx, DWORD PTR _a$[ebp]
	not	ecx
	and	ecx, DWORD PTR _d$[ebp]
	or	eax, ecx
	mov	edx, 4
	imul	ecx, edx, 0
	add	eax, DWORD PTR _x$[ebp+ecx]
	mov	edx, DWORD PTR _b$[ebp]
	lea	eax, DWORD PTR [edx+eax-373897302]
	mov	DWORD PTR _b$[ebp], eax
	mov	eax, DWORD PTR _b$[ebp]
	shl	eax, 20					; 00000014H
	mov	ecx, DWORD PTR _b$[ebp]
	shr	ecx, 12					; 0000000cH
	or	eax, ecx
	mov	DWORD PTR _b$[ebp], eax
	mov	eax, DWORD PTR _b$[ebp]
	add	eax, DWORD PTR _c$[ebp]
	mov	DWORD PTR _b$[ebp], eax
; Line 161
	mov	eax, DWORD PTR _b$[ebp]
	and	eax, DWORD PTR _d$[ebp]
	mov	ecx, DWORD PTR _d$[ebp]
	not	ecx
	and	ecx, DWORD PTR _c$[ebp]
	or	eax, ecx
	mov	edx, 4
	imul	ecx, edx, 5
	add	eax, DWORD PTR _x$[ebp+ecx]
	mov	edx, DWORD PTR _a$[ebp]
	lea	eax, DWORD PTR [edx+eax-701558691]
	mov	DWORD PTR _a$[ebp], eax
	mov	eax, DWORD PTR _a$[ebp]
	shl	eax, 5
	mov	ecx, DWORD PTR _a$[ebp]
	shr	ecx, 27					; 0000001bH
	or	eax, ecx
	mov	DWORD PTR _a$[ebp], eax
	mov	eax, DWORD PTR _a$[ebp]
	add	eax, DWORD PTR _b$[ebp]
	mov	DWORD PTR _a$[ebp], eax
; Line 162
	mov	eax, DWORD PTR _a$[ebp]
	and	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR _c$[ebp]
	not	ecx
	and	ecx, DWORD PTR _b$[ebp]
	or	eax, ecx
	mov	edx, 4
	imul	ecx, edx, 10
	add	eax, DWORD PTR _x$[ebp+ecx]
	mov	edx, DWORD PTR _d$[ebp]
	lea	eax, DWORD PTR [edx+eax+38016083]
	mov	DWORD PTR _d$[ebp], eax
	mov	eax, DWORD PTR _d$[ebp]
	shl	eax, 9
	mov	ecx, DWORD PTR _d$[ebp]
	shr	ecx, 23					; 00000017H
	or	eax, ecx
	mov	DWORD PTR _d$[ebp], eax
	mov	eax, DWORD PTR _d$[ebp]
	add	eax, DWORD PTR _a$[ebp]
	mov	DWORD PTR _d$[ebp], eax
; Line 163
	mov	eax, DWORD PTR _d$[ebp]
	and	eax, DWORD PTR _b$[ebp]
	mov	ecx, DWORD PTR _b$[ebp]
	not	ecx
	and	ecx, DWORD PTR _a$[ebp]
	or	eax, ecx
	mov	edx, 4
	imul	ecx, edx, 15
	add	eax, DWORD PTR _x$[ebp+ecx]
	mov	edx, DWORD PTR _c$[ebp]
	lea	eax, DWORD PTR [edx+eax-660478335]
	mov	DWORD PTR _c$[ebp], eax
	mov	eax, DWORD PTR _c$[ebp]
	shl	eax, 14					; 0000000eH
	mov	ecx, DWORD PTR _c$[ebp]
	shr	ecx, 18					; 00000012H
	or	eax, ecx
	mov	DWORD PTR _c$[ebp], eax
	mov	eax, DWORD PTR _c$[ebp]
	add	eax, DWORD PTR _d$[ebp]
	mov	DWORD PTR _c$[ebp], eax
; Line 164
	mov	eax, DWORD PTR _c$[ebp]
	and	eax, DWORD PTR _a$[ebp]
	mov	ecx, DWORD PTR _a$[ebp]
	not	ecx
	and	ecx, DWORD PTR _d$[ebp]
	or	eax, ecx
	mov	edx, 4
	shl	edx, 2
	add	eax, DWORD PTR _x$[ebp+edx]
	mov	ecx, DWORD PTR _b$[ebp]
	lea	edx, DWORD PTR [ecx+eax-405537848]
	mov	DWORD PTR _b$[ebp], edx
	mov	eax, DWORD PTR _b$[ebp]
	shl	eax, 20					; 00000014H
	mov	ecx, DWORD PTR _b$[ebp]
	shr	ecx, 12					; 0000000cH
	or	eax, ecx
	mov	DWORD PTR _b$[ebp], eax
	mov	eax, DWORD PTR _b$[ebp]
	add	eax, DWORD PTR _c$[ebp]
	mov	DWORD PTR _b$[ebp], eax
; Line 165
	mov	eax, DWORD PTR _b$[ebp]
	and	eax, DWORD PTR _d$[ebp]
	mov	ecx, DWORD PTR _d$[ebp]
	not	ecx
	and	ecx, DWORD PTR _c$[ebp]
	or	eax, ecx
	mov	edx, 4
	imul	ecx, edx, 9
	add	eax, DWORD PTR _x$[ebp+ecx]
	mov	edx, DWORD PTR _a$[ebp]
	lea	eax, DWORD PTR [edx+eax+568446438]
	mov	DWORD PTR _a$[ebp], eax
	mov	eax, DWORD PTR _a$[ebp]
	shl	eax, 5
	mov	ecx, DWORD PTR _a$[ebp]
	shr	ecx, 27					; 0000001bH
	or	eax, ecx
	mov	DWORD PTR _a$[ebp], eax
	mov	eax, DWORD PTR _a$[ebp]
	add	eax, DWORD PTR _b$[ebp]
	mov	DWORD PTR _a$[ebp], eax
; Line 166
	mov	eax, DWORD PTR _a$[ebp]
	and	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR _c$[ebp]
	not	ecx
	and	ecx, DWORD PTR _b$[ebp]
	or	eax, ecx
	mov	edx, 4
	imul	ecx, edx, 14
	add	eax, DWORD PTR _x$[ebp+ecx]
	mov	edx, DWORD PTR _d$[ebp]
	lea	eax, DWORD PTR [edx+eax-1019803690]
	mov	DWORD PTR _d$[ebp], eax
	mov	eax, DWORD PTR _d$[ebp]
	shl	eax, 9
	mov	ecx, DWORD PTR _d$[ebp]
	shr	ecx, 23					; 00000017H
	or	eax, ecx
	mov	DWORD PTR _d$[ebp], eax
	mov	eax, DWORD PTR _d$[ebp]
	add	eax, DWORD PTR _a$[ebp]
	mov	DWORD PTR _d$[ebp], eax
; Line 167
	mov	eax, DWORD PTR _d$[ebp]
	and	eax, DWORD PTR _b$[ebp]
	mov	ecx, DWORD PTR _b$[ebp]
	not	ecx
	and	ecx, DWORD PTR _a$[ebp]
	or	eax, ecx
	mov	edx, 4
	imul	ecx, edx, 3
	add	eax, DWORD PTR _x$[ebp+ecx]
	mov	edx, DWORD PTR _c$[ebp]
	lea	eax, DWORD PTR [edx+eax-187363961]
	mov	DWORD PTR _c$[ebp], eax
	mov	eax, DWORD PTR _c$[ebp]
	shl	eax, 14					; 0000000eH
	mov	ecx, DWORD PTR _c$[ebp]
	shr	ecx, 18					; 00000012H
	or	eax, ecx
	mov	DWORD PTR _c$[ebp], eax
	mov	eax, DWORD PTR _c$[ebp]
	add	eax, DWORD PTR _d$[ebp]
	mov	DWORD PTR _c$[ebp], eax
; Line 168
	mov	eax, DWORD PTR _c$[ebp]
	and	eax, DWORD PTR _a$[ebp]
	mov	ecx, DWORD PTR _a$[ebp]
	not	ecx
	and	ecx, DWORD PTR _d$[ebp]
	or	eax, ecx
	mov	edx, 4
	shl	edx, 3
	add	eax, DWORD PTR _x$[ebp+edx]
	mov	ecx, DWORD PTR _b$[ebp]
	lea	edx, DWORD PTR [ecx+eax+1163531501]
	mov	DWORD PTR _b$[ebp], edx
	mov	eax, DWORD PTR _b$[ebp]
	shl	eax, 20					; 00000014H
	mov	ecx, DWORD PTR _b$[ebp]
	shr	ecx, 12					; 0000000cH
	or	eax, ecx
	mov	DWORD PTR _b$[ebp], eax
	mov	eax, DWORD PTR _b$[ebp]
	add	eax, DWORD PTR _c$[ebp]
	mov	DWORD PTR _b$[ebp], eax
; Line 169
	mov	eax, DWORD PTR _b$[ebp]
	and	eax, DWORD PTR _d$[ebp]
	mov	ecx, DWORD PTR _d$[ebp]
	not	ecx
	and	ecx, DWORD PTR _c$[ebp]
	or	eax, ecx
	mov	edx, 4
	imul	ecx, edx, 13
	add	eax, DWORD PTR _x$[ebp+ecx]
	mov	edx, DWORD PTR _a$[ebp]
	lea	eax, DWORD PTR [edx+eax-1444681467]
	mov	DWORD PTR _a$[ebp], eax
	mov	eax, DWORD PTR _a$[ebp]
	shl	eax, 5
	mov	ecx, DWORD PTR _a$[ebp]
	shr	ecx, 27					; 0000001bH
	or	eax, ecx
	mov	DWORD PTR _a$[ebp], eax
	mov	eax, DWORD PTR _a$[ebp]
	add	eax, DWORD PTR _b$[ebp]
	mov	DWORD PTR _a$[ebp], eax
; Line 170
	mov	eax, DWORD PTR _a$[ebp]
	and	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR _c$[ebp]
	not	ecx
	and	ecx, DWORD PTR _b$[ebp]
	or	eax, ecx
	mov	edx, 4
	shl	edx, 1
	add	eax, DWORD PTR _x$[ebp+edx]
	mov	ecx, DWORD PTR _d$[ebp]
	lea	edx, DWORD PTR [ecx+eax-51403784]
	mov	DWORD PTR _d$[ebp], edx
	mov	eax, DWORD PTR _d$[ebp]
	shl	eax, 9
	mov	ecx, DWORD PTR _d$[ebp]
	shr	ecx, 23					; 00000017H
	or	eax, ecx
	mov	DWORD PTR _d$[ebp], eax
	mov	eax, DWORD PTR _d$[ebp]
	add	eax, DWORD PTR _a$[ebp]
	mov	DWORD PTR _d$[ebp], eax
; Line 171
	mov	eax, DWORD PTR _d$[ebp]
	and	eax, DWORD PTR _b$[ebp]
	mov	ecx, DWORD PTR _b$[ebp]
	not	ecx
	and	ecx, DWORD PTR _a$[ebp]
	or	eax, ecx
	mov	edx, 4
	imul	ecx, edx, 7
	add	eax, DWORD PTR _x$[ebp+ecx]
	mov	edx, DWORD PTR _c$[ebp]
	lea	eax, DWORD PTR [edx+eax+1735328473]
	mov	DWORD PTR _c$[ebp], eax
	mov	eax, DWORD PTR _c$[ebp]
	shl	eax, 14					; 0000000eH
	mov	ecx, DWORD PTR _c$[ebp]
	shr	ecx, 18					; 00000012H
	or	eax, ecx
	mov	DWORD PTR _c$[ebp], eax
	mov	eax, DWORD PTR _c$[ebp]
	add	eax, DWORD PTR _d$[ebp]
	mov	DWORD PTR _c$[ebp], eax
; Line 172
	mov	eax, DWORD PTR _c$[ebp]
	and	eax, DWORD PTR _a$[ebp]
	mov	ecx, DWORD PTR _a$[ebp]
	not	ecx
	and	ecx, DWORD PTR _d$[ebp]
	or	eax, ecx
	mov	edx, 4
	imul	ecx, edx, 12
	add	eax, DWORD PTR _x$[ebp+ecx]
	mov	edx, DWORD PTR _b$[ebp]
	lea	eax, DWORD PTR [edx+eax-1926607734]
	mov	DWORD PTR _b$[ebp], eax
	mov	eax, DWORD PTR _b$[ebp]
	shl	eax, 20					; 00000014H
	mov	ecx, DWORD PTR _b$[ebp]
	shr	ecx, 12					; 0000000cH
	or	eax, ecx
	mov	DWORD PTR _b$[ebp], eax
	mov	eax, DWORD PTR _b$[ebp]
	add	eax, DWORD PTR _c$[ebp]
	mov	DWORD PTR _b$[ebp], eax
; Line 175
	mov	eax, DWORD PTR _b$[ebp]
	xor	eax, DWORD PTR _c$[ebp]
	xor	eax, DWORD PTR _d$[ebp]
	mov	ecx, 4
	imul	edx, ecx, 5
	add	eax, DWORD PTR _x$[ebp+edx]
	mov	ecx, DWORD PTR _a$[ebp]
	lea	edx, DWORD PTR [ecx+eax-378558]
	mov	DWORD PTR _a$[ebp], edx
	mov	eax, DWORD PTR _a$[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _a$[ebp]
	shr	ecx, 28					; 0000001cH
	or	eax, ecx
	mov	DWORD PTR _a$[ebp], eax
	mov	eax, DWORD PTR _a$[ebp]
	add	eax, DWORD PTR _b$[ebp]
	mov	DWORD PTR _a$[ebp], eax
; Line 176
	mov	eax, DWORD PTR _a$[ebp]
	xor	eax, DWORD PTR _b$[ebp]
	xor	eax, DWORD PTR _c$[ebp]
	mov	ecx, 4
	shl	ecx, 3
	add	eax, DWORD PTR _x$[ebp+ecx]
	mov	edx, DWORD PTR _d$[ebp]
	lea	eax, DWORD PTR [edx+eax-2022574463]
	mov	DWORD PTR _d$[ebp], eax
	mov	eax, DWORD PTR _d$[ebp]
	shl	eax, 11					; 0000000bH
	mov	ecx, DWORD PTR _d$[ebp]
	shr	ecx, 21					; 00000015H
	or	eax, ecx
	mov	DWORD PTR _d$[ebp], eax
	mov	eax, DWORD PTR _d$[ebp]
	add	eax, DWORD PTR _a$[ebp]
	mov	DWORD PTR _d$[ebp], eax
; Line 177
	mov	eax, DWORD PTR _d$[ebp]
	xor	eax, DWORD PTR _a$[ebp]
	xor	eax, DWORD PTR _b$[ebp]
	mov	ecx, 4
	imul	edx, ecx, 11
	add	eax, DWORD PTR _x$[ebp+edx]
	mov	ecx, DWORD PTR _c$[ebp]
	lea	edx, DWORD PTR [ecx+eax+1839030562]
	mov	DWORD PTR _c$[ebp], edx
	mov	eax, DWORD PTR _c$[ebp]
	shl	eax, 16					; 00000010H
	mov	ecx, DWORD PTR _c$[ebp]
	shr	ecx, 16					; 00000010H
	or	eax, ecx
	mov	DWORD PTR _c$[ebp], eax
	mov	eax, DWORD PTR _c$[ebp]
	add	eax, DWORD PTR _d$[ebp]
	mov	DWORD PTR _c$[ebp], eax
; Line 178
	mov	eax, DWORD PTR _c$[ebp]
	xor	eax, DWORD PTR _d$[ebp]
	xor	eax, DWORD PTR _a$[ebp]
	mov	ecx, 4
	imul	edx, ecx, 14
	add	eax, DWORD PTR _x$[ebp+edx]
	mov	ecx, DWORD PTR _b$[ebp]
	lea	edx, DWORD PTR [ecx+eax-35309556]
	mov	DWORD PTR _b$[ebp], edx
	mov	eax, DWORD PTR _b$[ebp]
	shl	eax, 23					; 00000017H
	mov	ecx, DWORD PTR _b$[ebp]
	shr	ecx, 9
	or	eax, ecx
	mov	DWORD PTR _b$[ebp], eax
	mov	eax, DWORD PTR _b$[ebp]
	add	eax, DWORD PTR _c$[ebp]
	mov	DWORD PTR _b$[ebp], eax
; Line 179
	mov	eax, DWORD PTR _b$[ebp]
	xor	eax, DWORD PTR _c$[ebp]
	xor	eax, DWORD PTR _d$[ebp]
	mov	ecx, 4
	shl	ecx, 0
	add	eax, DWORD PTR _x$[ebp+ecx]
	mov	edx, DWORD PTR _a$[ebp]
	lea	eax, DWORD PTR [edx+eax-1530992060]
	mov	DWORD PTR _a$[ebp], eax
	mov	eax, DWORD PTR _a$[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _a$[ebp]
	shr	ecx, 28					; 0000001cH
	or	eax, ecx
	mov	DWORD PTR _a$[ebp], eax
	mov	eax, DWORD PTR _a$[ebp]
	add	eax, DWORD PTR _b$[ebp]
	mov	DWORD PTR _a$[ebp], eax
; Line 180
	mov	eax, DWORD PTR _a$[ebp]
	xor	eax, DWORD PTR _b$[ebp]
	xor	eax, DWORD PTR _c$[ebp]
	mov	ecx, 4
	shl	ecx, 2
	add	eax, DWORD PTR _x$[ebp+ecx]
	mov	edx, DWORD PTR _d$[ebp]
	lea	eax, DWORD PTR [edx+eax+1272893353]
	mov	DWORD PTR _d$[ebp], eax
	mov	eax, DWORD PTR _d$[ebp]
	shl	eax, 11					; 0000000bH
	mov	ecx, DWORD PTR _d$[ebp]
	shr	ecx, 21					; 00000015H
	or	eax, ecx
	mov	DWORD PTR _d$[ebp], eax
	mov	eax, DWORD PTR _d$[ebp]
	add	eax, DWORD PTR _a$[ebp]
	mov	DWORD PTR _d$[ebp], eax
; Line 181
	mov	eax, DWORD PTR _d$[ebp]
	xor	eax, DWORD PTR _a$[ebp]
	xor	eax, DWORD PTR _b$[ebp]
	mov	ecx, 4
	imul	edx, ecx, 7
	add	eax, DWORD PTR _x$[ebp+edx]
	mov	ecx, DWORD PTR _c$[ebp]
	lea	edx, DWORD PTR [ecx+eax-155497632]
	mov	DWORD PTR _c$[ebp], edx
	mov	eax, DWORD PTR _c$[ebp]
	shl	eax, 16					; 00000010H
	mov	ecx, DWORD PTR _c$[ebp]
	shr	ecx, 16					; 00000010H
	or	eax, ecx
	mov	DWORD PTR _c$[ebp], eax
	mov	eax, DWORD PTR _c$[ebp]
	add	eax, DWORD PTR _d$[ebp]
	mov	DWORD PTR _c$[ebp], eax
; Line 182
	mov	eax, DWORD PTR _c$[ebp]
	xor	eax, DWORD PTR _d$[ebp]
	xor	eax, DWORD PTR _a$[ebp]
	mov	ecx, 4
	imul	edx, ecx, 10
	add	eax, DWORD PTR _x$[ebp+edx]
	mov	ecx, DWORD PTR _b$[ebp]
	lea	edx, DWORD PTR [ecx+eax-1094730640]
	mov	DWORD PTR _b$[ebp], edx
	mov	eax, DWORD PTR _b$[ebp]
	shl	eax, 23					; 00000017H
	mov	ecx, DWORD PTR _b$[ebp]
	shr	ecx, 9
	or	eax, ecx
	mov	DWORD PTR _b$[ebp], eax
	mov	eax, DWORD PTR _b$[ebp]
	add	eax, DWORD PTR _c$[ebp]
	mov	DWORD PTR _b$[ebp], eax
; Line 183
	mov	eax, DWORD PTR _b$[ebp]
	xor	eax, DWORD PTR _c$[ebp]
	xor	eax, DWORD PTR _d$[ebp]
	mov	ecx, 4
	imul	edx, ecx, 13
	add	eax, DWORD PTR _x$[ebp+edx]
	mov	ecx, DWORD PTR _a$[ebp]
	lea	edx, DWORD PTR [ecx+eax+681279174]
	mov	DWORD PTR _a$[ebp], edx
	mov	eax, DWORD PTR _a$[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _a$[ebp]
	shr	ecx, 28					; 0000001cH
	or	eax, ecx
	mov	DWORD PTR _a$[ebp], eax
	mov	eax, DWORD PTR _a$[ebp]
	add	eax, DWORD PTR _b$[ebp]
	mov	DWORD PTR _a$[ebp], eax
; Line 184
	mov	eax, DWORD PTR _a$[ebp]
	xor	eax, DWORD PTR _b$[ebp]
	xor	eax, DWORD PTR _c$[ebp]
	mov	ecx, 4
	imul	edx, ecx, 0
	add	eax, DWORD PTR _x$[ebp+edx]
	mov	ecx, DWORD PTR _d$[ebp]
	lea	edx, DWORD PTR [ecx+eax-358537222]
	mov	DWORD PTR _d$[ebp], edx
	mov	eax, DWORD PTR _d$[ebp]
	shl	eax, 11					; 0000000bH
	mov	ecx, DWORD PTR _d$[ebp]
	shr	ecx, 21					; 00000015H
	or	eax, ecx
	mov	DWORD PTR _d$[ebp], eax
	mov	eax, DWORD PTR _d$[ebp]
	add	eax, DWORD PTR _a$[ebp]
	mov	DWORD PTR _d$[ebp], eax
; Line 185
	mov	eax, DWORD PTR _d$[ebp]
	xor	eax, DWORD PTR _a$[ebp]
	xor	eax, DWORD PTR _b$[ebp]
	mov	ecx, 4
	imul	edx, ecx, 3
	add	eax, DWORD PTR _x$[ebp+edx]
	mov	ecx, DWORD PTR _c$[ebp]
	lea	edx, DWORD PTR [ecx+eax-722521979]
	mov	DWORD PTR _c$[ebp], edx
	mov	eax, DWORD PTR _c$[ebp]
	shl	eax, 16					; 00000010H
	mov	ecx, DWORD PTR _c$[ebp]
	shr	ecx, 16					; 00000010H
	or	eax, ecx
	mov	DWORD PTR _c$[ebp], eax
	mov	eax, DWORD PTR _c$[ebp]
	add	eax, DWORD PTR _d$[ebp]
	mov	DWORD PTR _c$[ebp], eax
; Line 186
	mov	eax, DWORD PTR _c$[ebp]
	xor	eax, DWORD PTR _d$[ebp]
	xor	eax, DWORD PTR _a$[ebp]
	mov	ecx, 4
	imul	edx, ecx, 6
	add	eax, DWORD PTR _x$[ebp+edx]
	mov	ecx, DWORD PTR _b$[ebp]
	lea	edx, DWORD PTR [ecx+eax+76029189]
	mov	DWORD PTR _b$[ebp], edx
	mov	eax, DWORD PTR _b$[ebp]
	shl	eax, 23					; 00000017H
	mov	ecx, DWORD PTR _b$[ebp]
	shr	ecx, 9
	or	eax, ecx
	mov	DWORD PTR _b$[ebp], eax
	mov	eax, DWORD PTR _b$[ebp]
	add	eax, DWORD PTR _c$[ebp]
	mov	DWORD PTR _b$[ebp], eax
; Line 187
	mov	eax, DWORD PTR _b$[ebp]
	xor	eax, DWORD PTR _c$[ebp]
	xor	eax, DWORD PTR _d$[ebp]
	mov	ecx, 4
	imul	edx, ecx, 9
	add	eax, DWORD PTR _x$[ebp+edx]
	mov	ecx, DWORD PTR _a$[ebp]
	lea	edx, DWORD PTR [ecx+eax-640364487]
	mov	DWORD PTR _a$[ebp], edx
	mov	eax, DWORD PTR _a$[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _a$[ebp]
	shr	ecx, 28					; 0000001cH
	or	eax, ecx
	mov	DWORD PTR _a$[ebp], eax
	mov	eax, DWORD PTR _a$[ebp]
	add	eax, DWORD PTR _b$[ebp]
	mov	DWORD PTR _a$[ebp], eax
; Line 188
	mov	eax, DWORD PTR _a$[ebp]
	xor	eax, DWORD PTR _b$[ebp]
	xor	eax, DWORD PTR _c$[ebp]
	mov	ecx, 4
	imul	edx, ecx, 12
	add	eax, DWORD PTR _x$[ebp+edx]
	mov	ecx, DWORD PTR _d$[ebp]
	lea	edx, DWORD PTR [ecx+eax-421815835]
	mov	DWORD PTR _d$[ebp], edx
	mov	eax, DWORD PTR _d$[ebp]
	shl	eax, 11					; 0000000bH
	mov	ecx, DWORD PTR _d$[ebp]
	shr	ecx, 21					; 00000015H
	or	eax, ecx
	mov	DWORD PTR _d$[ebp], eax
	mov	eax, DWORD PTR _d$[ebp]
	add	eax, DWORD PTR _a$[ebp]
	mov	DWORD PTR _d$[ebp], eax
; Line 189
	mov	eax, DWORD PTR _d$[ebp]
	xor	eax, DWORD PTR _a$[ebp]
	xor	eax, DWORD PTR _b$[ebp]
	mov	ecx, 4
	imul	edx, ecx, 15
	add	eax, DWORD PTR _x$[ebp+edx]
	mov	ecx, DWORD PTR _c$[ebp]
	lea	edx, DWORD PTR [ecx+eax+530742520]
	mov	DWORD PTR _c$[ebp], edx
	mov	eax, DWORD PTR _c$[ebp]
	shl	eax, 16					; 00000010H
	mov	ecx, DWORD PTR _c$[ebp]
	shr	ecx, 16					; 00000010H
	or	eax, ecx
	mov	DWORD PTR _c$[ebp], eax
	mov	eax, DWORD PTR _c$[ebp]
	add	eax, DWORD PTR _d$[ebp]
	mov	DWORD PTR _c$[ebp], eax
; Line 190
	mov	eax, DWORD PTR _c$[ebp]
	xor	eax, DWORD PTR _d$[ebp]
	xor	eax, DWORD PTR _a$[ebp]
	mov	ecx, 4
	shl	ecx, 1
	add	eax, DWORD PTR _x$[ebp+ecx]
	mov	edx, DWORD PTR _b$[ebp]
	lea	eax, DWORD PTR [edx+eax-995338651]
	mov	DWORD PTR _b$[ebp], eax
	mov	eax, DWORD PTR _b$[ebp]
	shl	eax, 23					; 00000017H
	mov	ecx, DWORD PTR _b$[ebp]
	shr	ecx, 9
	or	eax, ecx
	mov	DWORD PTR _b$[ebp], eax
	mov	eax, DWORD PTR _b$[ebp]
	add	eax, DWORD PTR _c$[ebp]
	mov	DWORD PTR _b$[ebp], eax
; Line 193
	mov	eax, DWORD PTR _d$[ebp]
	not	eax
	or	eax, DWORD PTR _b$[ebp]
	xor	eax, DWORD PTR _c$[ebp]
	mov	ecx, 4
	imul	edx, ecx, 0
	add	eax, DWORD PTR _x$[ebp+edx]
	mov	ecx, DWORD PTR _a$[ebp]
	lea	edx, DWORD PTR [ecx+eax-198630844]
	mov	DWORD PTR _a$[ebp], edx
	mov	eax, DWORD PTR _a$[ebp]
	shl	eax, 6
	mov	ecx, DWORD PTR _a$[ebp]
	shr	ecx, 26					; 0000001aH
	or	eax, ecx
	mov	DWORD PTR _a$[ebp], eax
	mov	eax, DWORD PTR _a$[ebp]
	add	eax, DWORD PTR _b$[ebp]
	mov	DWORD PTR _a$[ebp], eax
; Line 194
	mov	eax, DWORD PTR _c$[ebp]
	not	eax
	or	eax, DWORD PTR _a$[ebp]
	xor	eax, DWORD PTR _b$[ebp]
	mov	ecx, 4
	imul	edx, ecx, 7
	add	eax, DWORD PTR _x$[ebp+edx]
	mov	ecx, DWORD PTR _d$[ebp]
	lea	edx, DWORD PTR [ecx+eax+1126891415]
	mov	DWORD PTR _d$[ebp], edx
	mov	eax, DWORD PTR _d$[ebp]
	shl	eax, 10					; 0000000aH
	mov	ecx, DWORD PTR _d$[ebp]
	shr	ecx, 22					; 00000016H
	or	eax, ecx
	mov	DWORD PTR _d$[ebp], eax
	mov	eax, DWORD PTR _d$[ebp]
	add	eax, DWORD PTR _a$[ebp]
	mov	DWORD PTR _d$[ebp], eax
; Line 195
	mov	eax, DWORD PTR _b$[ebp]
	not	eax
	or	eax, DWORD PTR _d$[ebp]
	xor	eax, DWORD PTR _a$[ebp]
	mov	ecx, 4
	imul	edx, ecx, 14
	add	eax, DWORD PTR _x$[ebp+edx]
	mov	ecx, DWORD PTR _c$[ebp]
	lea	edx, DWORD PTR [ecx+eax-1416354905]
	mov	DWORD PTR _c$[ebp], edx
	mov	eax, DWORD PTR _c$[ebp]
	shl	eax, 15					; 0000000fH
	mov	ecx, DWORD PTR _c$[ebp]
	shr	ecx, 17					; 00000011H
	or	eax, ecx
	mov	DWORD PTR _c$[ebp], eax
	mov	eax, DWORD PTR _c$[ebp]
	add	eax, DWORD PTR _d$[ebp]
	mov	DWORD PTR _c$[ebp], eax
; Line 196
	mov	eax, DWORD PTR _a$[ebp]
	not	eax
	or	eax, DWORD PTR _c$[ebp]
	xor	eax, DWORD PTR _d$[ebp]
	mov	ecx, 4
	imul	edx, ecx, 5
	add	eax, DWORD PTR _x$[ebp+edx]
	mov	ecx, DWORD PTR _b$[ebp]
	lea	edx, DWORD PTR [ecx+eax-57434055]
	mov	DWORD PTR _b$[ebp], edx
	mov	eax, DWORD PTR _b$[ebp]
	shl	eax, 21					; 00000015H
	mov	ecx, DWORD PTR _b$[ebp]
	shr	ecx, 11					; 0000000bH
	or	eax, ecx
	mov	DWORD PTR _b$[ebp], eax
	mov	eax, DWORD PTR _b$[ebp]
	add	eax, DWORD PTR _c$[ebp]
	mov	DWORD PTR _b$[ebp], eax
; Line 197
	mov	eax, DWORD PTR _d$[ebp]
	not	eax
	or	eax, DWORD PTR _b$[ebp]
	xor	eax, DWORD PTR _c$[ebp]
	mov	ecx, 4
	imul	edx, ecx, 12
	add	eax, DWORD PTR _x$[ebp+edx]
	mov	ecx, DWORD PTR _a$[ebp]
	lea	edx, DWORD PTR [ecx+eax+1700485571]
	mov	DWORD PTR _a$[ebp], edx
	mov	eax, DWORD PTR _a$[ebp]
	shl	eax, 6
	mov	ecx, DWORD PTR _a$[ebp]
	shr	ecx, 26					; 0000001aH
	or	eax, ecx
	mov	DWORD PTR _a$[ebp], eax
	mov	eax, DWORD PTR _a$[ebp]
	add	eax, DWORD PTR _b$[ebp]
	mov	DWORD PTR _a$[ebp], eax
; Line 198
	mov	eax, DWORD PTR _c$[ebp]
	not	eax
	or	eax, DWORD PTR _a$[ebp]
	xor	eax, DWORD PTR _b$[ebp]
	mov	ecx, 4
	imul	edx, ecx, 3
	add	eax, DWORD PTR _x$[ebp+edx]
	mov	ecx, DWORD PTR _d$[ebp]
	lea	edx, DWORD PTR [ecx+eax-1894986606]
	mov	DWORD PTR _d$[ebp], edx
	mov	eax, DWORD PTR _d$[ebp]
	shl	eax, 10					; 0000000aH
	mov	ecx, DWORD PTR _d$[ebp]
	shr	ecx, 22					; 00000016H
	or	eax, ecx
	mov	DWORD PTR _d$[ebp], eax
	mov	eax, DWORD PTR _d$[ebp]
	add	eax, DWORD PTR _a$[ebp]
	mov	DWORD PTR _d$[ebp], eax
; Line 199
	mov	eax, DWORD PTR _b$[ebp]
	not	eax
	or	eax, DWORD PTR _d$[ebp]
	xor	eax, DWORD PTR _a$[ebp]
	mov	ecx, 4
	imul	edx, ecx, 10
	add	eax, DWORD PTR _x$[ebp+edx]
	mov	ecx, DWORD PTR _c$[ebp]
	lea	edx, DWORD PTR [ecx+eax-1051523]
	mov	DWORD PTR _c$[ebp], edx
	mov	eax, DWORD PTR _c$[ebp]
	shl	eax, 15					; 0000000fH
	mov	ecx, DWORD PTR _c$[ebp]
	shr	ecx, 17					; 00000011H
	or	eax, ecx
	mov	DWORD PTR _c$[ebp], eax
	mov	eax, DWORD PTR _c$[ebp]
	add	eax, DWORD PTR _d$[ebp]
	mov	DWORD PTR _c$[ebp], eax
; Line 200
	mov	eax, DWORD PTR _a$[ebp]
	not	eax
	or	eax, DWORD PTR _c$[ebp]
	xor	eax, DWORD PTR _d$[ebp]
	mov	ecx, 4
	shl	ecx, 0
	add	eax, DWORD PTR _x$[ebp+ecx]
	mov	edx, DWORD PTR _b$[ebp]
	lea	eax, DWORD PTR [edx+eax-2054922799]
	mov	DWORD PTR _b$[ebp], eax
	mov	eax, DWORD PTR _b$[ebp]
	shl	eax, 21					; 00000015H
	mov	ecx, DWORD PTR _b$[ebp]
	shr	ecx, 11					; 0000000bH
	or	eax, ecx
	mov	DWORD PTR _b$[ebp], eax
	mov	eax, DWORD PTR _b$[ebp]
	add	eax, DWORD PTR _c$[ebp]
	mov	DWORD PTR _b$[ebp], eax
; Line 201
	mov	eax, DWORD PTR _d$[ebp]
	not	eax
	or	eax, DWORD PTR _b$[ebp]
	xor	eax, DWORD PTR _c$[ebp]
	mov	ecx, 4
	shl	ecx, 3
	add	eax, DWORD PTR _x$[ebp+ecx]
	mov	edx, DWORD PTR _a$[ebp]
	lea	eax, DWORD PTR [edx+eax+1873313359]
	mov	DWORD PTR _a$[ebp], eax
	mov	eax, DWORD PTR _a$[ebp]
	shl	eax, 6
	mov	ecx, DWORD PTR _a$[ebp]
	shr	ecx, 26					; 0000001aH
	or	eax, ecx
	mov	DWORD PTR _a$[ebp], eax
	mov	eax, DWORD PTR _a$[ebp]
	add	eax, DWORD PTR _b$[ebp]
	mov	DWORD PTR _a$[ebp], eax
; Line 202
	mov	eax, DWORD PTR _c$[ebp]
	not	eax
	or	eax, DWORD PTR _a$[ebp]
	xor	eax, DWORD PTR _b$[ebp]
	mov	ecx, 4
	imul	edx, ecx, 15
	add	eax, DWORD PTR _x$[ebp+edx]
	mov	ecx, DWORD PTR _d$[ebp]
	lea	edx, DWORD PTR [ecx+eax-30611744]
	mov	DWORD PTR _d$[ebp], edx
	mov	eax, DWORD PTR _d$[ebp]
	shl	eax, 10					; 0000000aH
	mov	ecx, DWORD PTR _d$[ebp]
	shr	ecx, 22					; 00000016H
	or	eax, ecx
	mov	DWORD PTR _d$[ebp], eax
	mov	eax, DWORD PTR _d$[ebp]
	add	eax, DWORD PTR _a$[ebp]
	mov	DWORD PTR _d$[ebp], eax
; Line 203
	mov	eax, DWORD PTR _b$[ebp]
	not	eax
	or	eax, DWORD PTR _d$[ebp]
	xor	eax, DWORD PTR _a$[ebp]
	mov	ecx, 4
	imul	edx, ecx, 6
	add	eax, DWORD PTR _x$[ebp+edx]
	mov	ecx, DWORD PTR _c$[ebp]
	lea	edx, DWORD PTR [ecx+eax-1560198380]
	mov	DWORD PTR _c$[ebp], edx
	mov	eax, DWORD PTR _c$[ebp]
	shl	eax, 15					; 0000000fH
	mov	ecx, DWORD PTR _c$[ebp]
	shr	ecx, 17					; 00000011H
	or	eax, ecx
	mov	DWORD PTR _c$[ebp], eax
	mov	eax, DWORD PTR _c$[ebp]
	add	eax, DWORD PTR _d$[ebp]
	mov	DWORD PTR _c$[ebp], eax
; Line 204
	mov	eax, DWORD PTR _a$[ebp]
	not	eax
	or	eax, DWORD PTR _c$[ebp]
	xor	eax, DWORD PTR _d$[ebp]
	mov	ecx, 4
	imul	edx, ecx, 13
	add	eax, DWORD PTR _x$[ebp+edx]
	mov	ecx, DWORD PTR _b$[ebp]
	lea	edx, DWORD PTR [ecx+eax+1309151649]
	mov	DWORD PTR _b$[ebp], edx
	mov	eax, DWORD PTR _b$[ebp]
	shl	eax, 21					; 00000015H
	mov	ecx, DWORD PTR _b$[ebp]
	shr	ecx, 11					; 0000000bH
	or	eax, ecx
	mov	DWORD PTR _b$[ebp], eax
	mov	eax, DWORD PTR _b$[ebp]
	add	eax, DWORD PTR _c$[ebp]
	mov	DWORD PTR _b$[ebp], eax
; Line 205
	mov	eax, DWORD PTR _d$[ebp]
	not	eax
	or	eax, DWORD PTR _b$[ebp]
	xor	eax, DWORD PTR _c$[ebp]
	mov	ecx, 4
	shl	ecx, 2
	add	eax, DWORD PTR _x$[ebp+ecx]
	mov	edx, DWORD PTR _a$[ebp]
	lea	eax, DWORD PTR [edx+eax-145523070]
	mov	DWORD PTR _a$[ebp], eax
	mov	eax, DWORD PTR _a$[ebp]
	shl	eax, 6
	mov	ecx, DWORD PTR _a$[ebp]
	shr	ecx, 26					; 0000001aH
	or	eax, ecx
	mov	DWORD PTR _a$[ebp], eax
	mov	eax, DWORD PTR _a$[ebp]
	add	eax, DWORD PTR _b$[ebp]
	mov	DWORD PTR _a$[ebp], eax
; Line 206
	mov	eax, DWORD PTR _c$[ebp]
	not	eax
	or	eax, DWORD PTR _a$[ebp]
	xor	eax, DWORD PTR _b$[ebp]
	mov	ecx, 4
	imul	edx, ecx, 11
	add	eax, DWORD PTR _x$[ebp+edx]
	mov	ecx, DWORD PTR _d$[ebp]
	lea	edx, DWORD PTR [ecx+eax-1120210379]
	mov	DWORD PTR _d$[ebp], edx
	mov	eax, DWORD PTR _d$[ebp]
	shl	eax, 10					; 0000000aH
	mov	ecx, DWORD PTR _d$[ebp]
	shr	ecx, 22					; 00000016H
	or	eax, ecx
	mov	DWORD PTR _d$[ebp], eax
	mov	eax, DWORD PTR _d$[ebp]
	add	eax, DWORD PTR _a$[ebp]
	mov	DWORD PTR _d$[ebp], eax
; Line 207
	mov	eax, DWORD PTR _b$[ebp]
	not	eax
	or	eax, DWORD PTR _d$[ebp]
	xor	eax, DWORD PTR _a$[ebp]
	mov	ecx, 4
	shl	ecx, 1
	add	eax, DWORD PTR _x$[ebp+ecx]
	mov	edx, DWORD PTR _c$[ebp]
	lea	eax, DWORD PTR [edx+eax+718787259]
	mov	DWORD PTR _c$[ebp], eax
	mov	eax, DWORD PTR _c$[ebp]
	shl	eax, 15					; 0000000fH
	mov	ecx, DWORD PTR _c$[ebp]
	shr	ecx, 17					; 00000011H
	or	eax, ecx
	mov	DWORD PTR _c$[ebp], eax
	mov	eax, DWORD PTR _c$[ebp]
	add	eax, DWORD PTR _d$[ebp]
	mov	DWORD PTR _c$[ebp], eax
; Line 208
	mov	eax, DWORD PTR _a$[ebp]
	not	eax
	or	eax, DWORD PTR _c$[ebp]
	xor	eax, DWORD PTR _d$[ebp]
	mov	ecx, 4
	imul	edx, ecx, 9
	add	eax, DWORD PTR _x$[ebp+edx]
	mov	ecx, DWORD PTR _b$[ebp]
	lea	edx, DWORD PTR [ecx+eax-343485551]
	mov	DWORD PTR _b$[ebp], edx
	mov	eax, DWORD PTR _b$[ebp]
	shl	eax, 21					; 00000015H
	mov	ecx, DWORD PTR _b$[ebp]
	shr	ecx, 11					; 0000000bH
	or	eax, ecx
	mov	DWORD PTR _b$[ebp], eax
	mov	eax, DWORD PTR _b$[ebp]
	add	eax, DWORD PTR _c$[ebp]
	mov	DWORD PTR _b$[ebp], eax
; Line 209
	mov	eax, 4
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _state$[ebp]
	mov	eax, DWORD PTR [edx+ecx]
	add	eax, DWORD PTR _a$[ebp]
	mov	ecx, 4
	imul	edx, ecx, 0
	mov	ecx, DWORD PTR _state$[ebp]
	mov	DWORD PTR [ecx+edx], eax
; Line 210
	mov	eax, 4
	shl	eax, 0
	mov	ecx, DWORD PTR _state$[ebp]
	mov	edx, DWORD PTR [ecx+eax]
	add	edx, DWORD PTR _b$[ebp]
	mov	eax, 4
	shl	eax, 0
	mov	ecx, DWORD PTR _state$[ebp]
	mov	DWORD PTR [ecx+eax], edx
; Line 211
	mov	eax, 4
	shl	eax, 1
	mov	ecx, DWORD PTR _state$[ebp]
	mov	edx, DWORD PTR [ecx+eax]
	add	edx, DWORD PTR _c$[ebp]
	mov	eax, 4
	shl	eax, 1
	mov	ecx, DWORD PTR _state$[ebp]
	mov	DWORD PTR [ecx+eax], edx
; Line 212
	mov	eax, 4
	imul	ecx, eax, 3
	mov	edx, DWORD PTR _state$[ebp]
	mov	eax, DWORD PTR [edx+ecx]
	add	eax, DWORD PTR _d$[ebp]
	mov	ecx, 4
	imul	edx, ecx, 3
	mov	ecx, DWORD PTR _state$[ebp]
	mov	DWORD PTR [ecx+edx], eax
; Line 213
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?MD5Transform@@YAXQAIQAE@Z ENDP				; MD5Transform
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ?MD5Final@@YAXPAUMD5_CTX@@QAE@Z
_TEXT	SEGMENT
tv72 = -88						; size = 4
_bits$ = -20						; size = 8
_padlen$ = -12						; size = 4
_index$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_context$ = 8						; size = 4
_digest$ = 12						; size = 4
?MD5Final@@YAXPAUMD5_CTX@@QAE@Z PROC			; MD5Final, COMDAT
; File E:\WHCR\第二阶段\挑战任务\编译测试VS生成的汇编文件和测试样本\ConsoleApplication2.cpp
; Line 95
	push	ebp
	mov	ebp, esp
	sub	esp, 88					; 00000058H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET __CEBDA0B5_ConsoleApplication2@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 96
	mov	DWORD PTR _index$[ebp], 0
	mov	DWORD PTR _padlen$[ebp], 0
; Line 98
	mov	eax, 4
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _context$[ebp]
	mov	eax, DWORD PTR [edx+ecx]
	shr	eax, 3
	and	eax, 63					; 0000003fH
	mov	DWORD PTR _index$[ebp], eax
; Line 99
	cmp	DWORD PTR _index$[ebp], 56		; 00000038H
	jae	SHORT $LN3@MD5Final
	mov	eax, 56					; 00000038H
	sub	eax, DWORD PTR _index$[ebp]
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@MD5Final
$LN3@MD5Final:
	mov	ecx, 120				; 00000078H
	sub	ecx, DWORD PTR _index$[ebp]
	mov	DWORD PTR tv72[ebp], ecx
$LN4@MD5Final:
	mov	edx, DWORD PTR tv72[ebp]
	mov	DWORD PTR _padlen$[ebp], edx
; Line 100
	push	8
	mov	eax, DWORD PTR _context$[ebp]
	push	eax
	lea	ecx, DWORD PTR _bits$[ebp]
	push	ecx
	call	?MD5Encode@@YAXPAEPAII@Z		; MD5Encode
	add	esp, 12					; 0000000cH
; Line 101
	mov	eax, DWORD PTR _padlen$[ebp]
	push	eax
	push	OFFSET ?PADDING@@3PAEA			; PADDING
	mov	ecx, DWORD PTR _context$[ebp]
	push	ecx
	call	?MD5Update@@YAXPAUMD5_CTX@@PAEI@Z	; MD5Update
	add	esp, 12					; 0000000cH
; Line 102
	push	8
	lea	eax, DWORD PTR _bits$[ebp]
	push	eax
	mov	ecx, DWORD PTR _context$[ebp]
	push	ecx
	call	?MD5Update@@YAXPAUMD5_CTX@@PAEI@Z	; MD5Update
	add	esp, 12					; 0000000cH
; Line 103
	push	16					; 00000010H
	mov	eax, DWORD PTR _context$[ebp]
	add	eax, 8
	push	eax
	mov	ecx, DWORD PTR _digest$[ebp]
	push	ecx
	call	?MD5Encode@@YAXPAEPAII@Z		; MD5Encode
	add	esp, 12					; 0000000cH
; Line 104
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?MD5Final@@YAXPAUMD5_CTX@@QAE@Z ENDP			; MD5Final
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ?MD5Update@@YAXPAUMD5_CTX@@PAEI@Z
_TEXT	SEGMENT
_partlen$ = -12						; size = 4
_index$ = -8						; size = 4
_i$ = -4						; size = 4
_context$ = 8						; size = 4
_input$ = 12						; size = 4
_inputlen$ = 16						; size = 4
?MD5Update@@YAXPAUMD5_CTX@@PAEI@Z PROC			; MD5Update, COMDAT
; File E:\WHCR\第二阶段\挑战任务\编译测试VS生成的汇编文件和测试样本\ConsoleApplication2.cpp
; Line 71
	push	ebp
	mov	ebp, esp
	sub	esp, 76					; 0000004cH
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET __CEBDA0B5_ConsoleApplication2@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 72
	mov	DWORD PTR _i$[ebp], 0
	mov	DWORD PTR _index$[ebp], 0
	mov	DWORD PTR _partlen$[ebp], 0
; Line 73
	mov	eax, 4
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _context$[ebp]
	mov	eax, DWORD PTR [edx+ecx]
	shr	eax, 3
	and	eax, 63					; 0000003fH
	mov	DWORD PTR _index$[ebp], eax
; Line 74
	mov	eax, 64					; 00000040H
	sub	eax, DWORD PTR _index$[ebp]
	mov	DWORD PTR _partlen$[ebp], eax
; Line 75
	mov	eax, 4
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _context$[ebp]
	mov	eax, DWORD PTR [edx+ecx]
	mov	ecx, DWORD PTR _inputlen$[ebp]
	lea	edx, DWORD PTR [eax+ecx*8]
	mov	eax, 4
	imul	ecx, eax, 0
	mov	eax, DWORD PTR _context$[ebp]
	mov	DWORD PTR [eax+ecx], edx
; Line 76
	mov	eax, 4
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _inputlen$[ebp]
	shl	edx, 3
	mov	eax, DWORD PTR _context$[ebp]
	cmp	DWORD PTR [eax+ecx], edx
	jae	SHORT $LN5@MD5Update
; Line 77
	mov	eax, 4
	shl	eax, 0
	mov	ecx, DWORD PTR _context$[ebp]
	mov	edx, DWORD PTR [ecx+eax]
	add	edx, 1
	mov	eax, 4
	shl	eax, 0
	mov	ecx, DWORD PTR _context$[ebp]
	mov	DWORD PTR [ecx+eax], edx
$LN5@MD5Update:
; Line 78
	mov	eax, 4
	shl	eax, 0
	mov	ecx, DWORD PTR _inputlen$[ebp]
	shr	ecx, 29					; 0000001dH
	mov	edx, DWORD PTR _context$[ebp]
	add	ecx, DWORD PTR [edx+eax]
	mov	eax, 4
	shl	eax, 0
	mov	edx, DWORD PTR _context$[ebp]
	mov	DWORD PTR [edx+eax], ecx
; Line 80
	mov	eax, DWORD PTR _inputlen$[ebp]
	cmp	eax, DWORD PTR _partlen$[ebp]
	jb	SHORT $LN6@MD5Update
; Line 82
	mov	eax, DWORD PTR _partlen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _input$[ebp]
	push	ecx
	mov	edx, DWORD PTR _index$[ebp]
	mov	eax, DWORD PTR _context$[ebp]
	lea	ecx, DWORD PTR [eax+edx+24]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 83
	mov	eax, DWORD PTR _context$[ebp]
	add	eax, 24					; 00000018H
	push	eax
	mov	ecx, DWORD PTR _context$[ebp]
	add	ecx, 8
	push	ecx
	call	?MD5Transform@@YAXQAIQAE@Z		; MD5Transform
	add	esp, 8
; Line 84
	mov	eax, DWORD PTR _partlen$[ebp]
	mov	DWORD PTR _i$[ebp], eax
	jmp	SHORT $LN4@MD5Update
$LN2@MD5Update:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 64					; 00000040H
	mov	DWORD PTR _i$[ebp], eax
$LN4@MD5Update:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 64					; 00000040H
	cmp	eax, DWORD PTR _inputlen$[ebp]
	ja	SHORT $LN3@MD5Update
; Line 85
	mov	eax, DWORD PTR _input$[ebp]
	add	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _context$[ebp]
	add	ecx, 8
	push	ecx
	call	?MD5Transform@@YAXQAIQAE@Z		; MD5Transform
	add	esp, 8
	jmp	SHORT $LN2@MD5Update
$LN3@MD5Update:
; Line 86
	mov	DWORD PTR _index$[ebp], 0
; Line 87
	jmp	SHORT $LN7@MD5Update
$LN6@MD5Update:
; Line 90
	mov	DWORD PTR _i$[ebp], 0
$LN7@MD5Update:
; Line 92
	mov	eax, DWORD PTR _inputlen$[ebp]
	sub	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _input$[ebp]
	add	ecx, DWORD PTR _i$[ebp]
	push	ecx
	mov	edx, DWORD PTR _index$[ebp]
	mov	eax, DWORD PTR _context$[ebp]
	lea	ecx, DWORD PTR [eax+edx+24]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 93
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?MD5Update@@YAXPAUMD5_CTX@@PAEI@Z ENDP			; MD5Update
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ?MD5Init@@YAXPAUMD5_CTX@@@Z
_TEXT	SEGMENT
_context$ = 8						; size = 4
?MD5Init@@YAXPAUMD5_CTX@@@Z PROC			; MD5Init, COMDAT
; File E:\WHCR\第二阶段\挑战任务\编译测试VS生成的汇编文件和测试样本\ConsoleApplication2.cpp
; Line 62
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET __CEBDA0B5_ConsoleApplication2@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 63
	mov	eax, 4
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _context$[ebp]
	mov	DWORD PTR [edx+ecx], 0
; Line 64
	mov	eax, 4
	shl	eax, 0
	mov	ecx, DWORD PTR _context$[ebp]
	mov	DWORD PTR [ecx+eax], 0
; Line 65
	mov	eax, 4
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _context$[ebp]
	mov	DWORD PTR [edx+ecx+8], 1732584193	; 67452301H
; Line 66
	mov	eax, 4
	shl	eax, 0
	mov	ecx, DWORD PTR _context$[ebp]
	mov	DWORD PTR [ecx+eax+8], -271733879	; efcdab89H
; Line 67
	mov	eax, 4
	shl	eax, 1
	mov	ecx, DWORD PTR _context$[ebp]
	mov	DWORD PTR [ecx+eax+8], -1732584194	; 98badcfeH
; Line 68
	mov	eax, 4
	imul	ecx, eax, 3
	mov	edx, DWORD PTR _context$[ebp]
	mov	DWORD PTR [edx+ecx+8], 271733878	; 10325476H
; Line 69
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?MD5Init@@YAXPAUMD5_CTX@@@Z ENDP			; MD5Init
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT _printf
_TEXT	SEGMENT
__ArgList$ = -8						; size = 4
__Result$ = -4						; size = 4
__Format$ = 8						; size = 4
_printf	PROC						; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h
; Line 954
	push	ebp
	mov	ebp, esp
	sub	esp, 76					; 0000004cH
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET __AD6A91B7_stdio@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 957
	lea	eax, DWORD PTR __Format$[ebp+4]
	mov	DWORD PTR __ArgList$[ebp], eax
; Line 958
	mov	eax, DWORD PTR __ArgList$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR __Format$[ebp]
	push	ecx
	push	1
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	__vfprintf_l
	add	esp, 16					; 00000010H
	mov	DWORD PTR __Result$[ebp], eax
; Line 959
	mov	DWORD PTR __ArgList$[ebp], 0
; Line 960
	mov	eax, DWORD PTR __Result$[ebp]
; Line 961
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_printf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT __vfprintf_l
_TEXT	SEGMENT
__Stream$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vfprintf_l PROC					; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h
; Line 642
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET __AD6A91B7_stdio@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 643
	mov	eax, DWORD PTR __ArgList$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Locale$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Format$[ebp]
	push	edx
	mov	eax, DWORD PTR __Stream$[ebp]
	push	eax
	call	___local_stdio_printf_options
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	call	DWORD PTR __imp____stdio_common_vfprintf
	add	esp, 24					; 00000018H
; Line 644
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
__vfprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_stdio_config.h
; Line 86
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET __F66CEB67_corecrt_stdio_config@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 88
	mov	eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
; Line 89
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END
